services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    environment:
      TZ: ${TZ}
      DOCKER_HOST: dockersocket
      CF_DNS_API_TOKEN: ${API_TOKEN}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - traefik-cert:/etc/traefik/cert/
      - traefik-logs:/var/log/traefik/
      - ${DOCKER_DIR}/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ${DOCKER_DIR}/traefik/fileConfig.yml:/etc/traefik/fileConfig.yml:ro
    labels:
      traefik.enable: true
      traefik.http.routers.api.rule: Host(`proxy.${DOMAIN}`) || Host(`proxy.local.${DOMAIN}`) || Host(`proxy.server.${DOMAIN}`)
      traefik.http.routers.api.entryPoints: https
      traefik.http.routers.api.service: api@internal
      traefik.http.routers.api.middlewares: auth@file
    depends_on:
      - dockersocket
    restart: always

  dockersocket:
    container_name: dockersocket
    image: tecnativa/docker-socket-proxy
    volumes:
      - /run/user/${USER_UID}/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy
    environment:
      CONTAINERS: 1
      POST: 0
    privileged: true
    restart: unless-stopped

volumes:
  traefik-cert:
  traefik-logs:

networks:
  proxy:
    external: true

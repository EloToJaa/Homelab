http:
  routers:
    pve:
      rule: Host(`pve.local.elotoja.com`)
      entryPoints:
        - https
      service: pve
      middlewares:
        - pve-headers
    nextcloud:
      rule: Host(`cloud.local.elotoja.com`)
      entryPoints:
        - https
      service: nextcloud
    adminer:
      rule: Host(`adminer.local.elotoja.com`)
      entryPoints:
        - https
      middlewares:
        - auth@file
        - start-adminer@file
      service: adminer
    grafana:
      rule: Host(`grafana.local.elotoja.com`)
      entryPoints:
        - https
      middlewares:
        - auth@file
        - start-grafana@file
      service: grafana
    redis-commander:
      rule: Host(`redis.local.elotoja.com`)
      entryPoints:
        - https
      middlewares:
        - auth@file
        - start-redis-commander@file
      service: redis-commander
    wireguard:
      rule: Host(`wg.elotoja.com`, `wg.local.elotoja.com`)
      entryPoints:
        - https
      middlewares:
        - auth@file
      service: wireguard

  services:
    pve:
      loadBalancer:
        servers:
          - url: https://192.168.0.30:8006
        passHostHeader: true
    nextcloud:
      loadBalancer:
        servers:
          - url: https://192.168.0.42
    adminer:
      loadBalancer:
        servers:
          - url: "http://adminer:8080"
    grafana:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"
    redis-commander:
      loadBalancer:
        servers:
          - url: "http://redis-commander:8081"
    wireguard:
      loadBalancer:
        servers:
          - url: "http://192.168.0.20:51821"

  ## MIDDLEWARES ##
  middlewares:
    # Only Allow Local networks
    local-ipwhitelist:
      ipWhiteList:
        sourceRange:
          - 127.0.0.1/32 # localhost
          - 192.168.0.1/24 # LAN Subnet

    # Authelia guard
    auth:
      forwardauth:
        address: http://auth:9091/api/verify?rd=https://auth.elotoja.com/ # replace auth with your authelia container name
        trustForwardHeader: true
        authResponseHeaders:
          - Remote-User
          - Remote-Groups
          - Remote-Name
          - Remote-Email

    # Authelia basic auth guard
    auth-basic:
      forwardauth:
        address: http://auth:9091/api/verify?auth=basic # replace auth with your authelia container name
        trustForwardHeader: true
        authResponseHeaders:
          - Remote-User
          - Remote-Groups
          - Remote-Name
          - Remote-Email

    # Security headers
    securityHeaders:
      headers:
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex"
          server: ""
          X-Forwarded-Proto: "https"
        sslProxyHeaders:
          X-Forwarded-Proto: https
        referrerPolicy: "strict-origin-when-cross-origin"
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        contentTypeNosniff: true
        browserXssFilter: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsSeconds: 63072000
        stsPreload: true

    gzip:
      compress: {}

    pve-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    start-adminer:
      plugin:
        sablier:
          dynamic:
            displayName: "adminer"
            refreshFrequency: 5s
            showDetails: "true"
            theme: shuffle
          names: adminer
          sablierUrl: http://sablier:10000
          sessionDuration: 1h

    start-grafana:
      plugin:
        sablier:
          dynamic:
            displayName: "grafana"
            refreshFrequency: 5s
            showDetails: "true"
            theme: shuffle
          names: grafana
          sablierUrl: http://sablier:10000
          sessionDuration: 1h

    start-redis-commander:
      plugin:
        sablier:
          dynamic:
            displayName: "redis commander"
            refreshFrequency: 5s
            showDetails: "true"
            theme: shuffle
          names: redis-commander
          sablierUrl: http://sablier:10000
          sessionDuration: 1h


# Only use secure ciphers - https://ssl-config.mozilla.org/#server=traefik&version=2.6.0&config=intermediate&guideline=5.6
tls:
  options:
    default:
      minVersion: VersionTLS12
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
